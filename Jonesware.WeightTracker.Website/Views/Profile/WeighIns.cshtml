@model IEnumerable<Jonesware.WeightTracker.Model.WeighIn>

@{
	ViewBag.Title = "Weigh Ins";
	Layout = "~/Views/Shared/_2ColumnLeft.cshtml";
}

@Html.Partial("~/Views/Shared/_PageHeader.cshtml", "Weigh Ins")
<a class="btn btn-default" href="@Url.RouteUrl("NewWeighIn")"><span class="fa fa-fw fa-plus"></span></a>

<div class="demo-container">
	<div id="placeholder" class="demo-placeholder"></div>
</div>

<div class="demo-container" style="height:150px;">
	<div id="overview" class="demo-placeholder"></div>
</div>

@section head
{
	<style>
		.demo-container {
			-moz-box-sizing: border-box;
			-webkit-box-sizing: border-box;
			box-sizing: border-box;
			width: 100%;
			height: 450px;
			padding: 20px 15px 15px 15px;
			margin: 15px auto 30px auto;
			border: 1px solid #ddd;
			background: #fff;
			background: linear-gradient(#f6f6f6 0, #fff 50px);
			background: -o-linear-gradient(#f6f6f6 0, #fff 50px);
			background: -ms-linear-gradient(#f6f6f6 0, #fff 50px);
			background: -moz-linear-gradient(#f6f6f6 0, #fff 50px);
			background: -webkit-linear-gradient(#f6f6f6 0, #fff 50px);
			-o-box-shadow: 0 3px 10px rgba(0,0,0,0.1);
			-ms-box-shadow: 0 3px 10px rgba(0,0,0,0.1);
			-moz-box-shadow: 0 3px 10px rgba(0,0,0,0.1);
			-webkit-box-shadow: 0 3px 10px rgba(0,0,0,0.1);
			box-shadow: 0 3px 10px rgba(0,0,0,0.15);
		}

		.demo-placeholder {
			width: 100%;
			height: 100%;
			font-size: 14px;
			line-height: 1.2em;
		}
	</style>
}

@section scripts
{
	<script>
		$(function () {
			var d = [
				@foreach (var item in Model.OrderBy(i => i.DateRecorded))
				{
					<text>[@item.DateRecorded.Subtract(new DateTime(1970, 1,1)).TotalMilliseconds, @item.Weight],</text>
				}
			];

			var plot = $.plot("#placeholder",
				[
					{
						data: d,
						label: 'Weight'
					}
				],
				{
					xaxis: {
						mode: "time",
						tickLength: 5
					},
					series: {
						lines: {
							show: true
						},
						points: {
							show: true
						}
					},
					selection: {
						mode: "x"
					},
					grid: {
						markings: weekendAreas,
						hoverable: true
					}
				}
			);

			var overview = $.plot("#overview", [d], {
				series: {
					lines: {
						show: true,
						lineWidth: 1
					},
					shadowSize: 0
				},
				xaxis: {
					ticks: [],
					mode: "time"
				},
				yaxis: {
					ticks: [],
					min: 0,
					autoscaleMargin: 0.1
				},
				selection: {
					mode: "x"
				}
			});

			$("#placeholder").bind("plotselected", function (event, ranges) {

				// do the zooming
				$.each(plot.getXAxes(), function (_, axis) {
					var opts = axis.options;
					opts.min = ranges.xaxis.from;
					opts.max = ranges.xaxis.to;
				});
				plot.setupGrid();
				plot.draw();
				plot.clearSelection();

				// don't fire event on the overview to prevent eternal loop

				overview.setSelection(ranges, true);
			});

			$("#overview").bind("plotselected", function (event, ranges) {
				plot.setSelection(ranges);
			});

			function weekendAreas(axes) {

				var markings = [],
					d = new Date(axes.xaxis.min);

				// go to the first Saturday

				d.setUTCDate(d.getUTCDate() - ((d.getUTCDay() + 1) % 7))
				d.setUTCSeconds(0);
				d.setUTCMinutes(0);
				d.setUTCHours(0);

				var i = d.getTime();

				// when we don't set yaxis, the rectangle automatically
				// extends to infinity upwards and downwards

				do {
					markings.push({ xaxis: { from: i, to: i + 2 * 24 * 60 * 60 * 1000 } });
					i += 7 * 24 * 60 * 60 * 1000;
				} while (i < axes.xaxis.max);

				return markings;
			}

			var options = {
				xaxis: {
					mode: "time",
					tickLength: 5
				},
				selection: {
					mode: "x"
				},
				grid: {
					markings: weekendAreas
				}
			};

			$("<div id='tooltip'></div>").css({
				position: "absolute",
				display: "none",
				border: "1px solid #fdd",
				padding: "2px",
				"background-color": "#fee",
				opacity: 0.80
			}).appendTo("body");

			$("#placeholder").bind("plothover", function (event, pos, item) {
				if (item) {
					var x = item.datapoint[0].toFixed(1),
						y = item.datapoint[1].toFixed(1);

					$("#tooltip").html(item.series.label + " = " + y)
						.css({ top: item.pageY + 5, left: item.pageX + 5 })
						.fadeIn(200);
				} else {
					$("#tooltip").hide();
				}
			});
		});
	</script>
}